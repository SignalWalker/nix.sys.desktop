diff --git a/flake.lock b/flake.lock
new file mode 100644
index 00000000..4b9c6fc4
--- /dev/null
+++ b/flake.lock
@@ -0,0 +1,105 @@
+{
+  "nodes": {
+    "alejandra": {
+      "inputs": {
+        "fenix": "fenix",
+        "flakeCompat": "flakeCompat",
+        "nixpkgs": [
+          "nixpkgs"
+        ]
+      },
+      "locked": {
+        "lastModified": 1692484559,
+        "narHash": "sha256-2GtN4dOShBbZuM53hOJxCNJ8udAjaEBP1EhijnublGM=",
+        "owner": "kamadorueda",
+        "repo": "alejandra",
+        "rev": "862262c37a4cb589106ec80a29127dee3860474a",
+        "type": "github"
+      },
+      "original": {
+        "owner": "kamadorueda",
+        "repo": "alejandra",
+        "type": "github"
+      }
+    },
+    "fenix": {
+      "inputs": {
+        "nixpkgs": [
+          "alejandra",
+          "nixpkgs"
+        ],
+        "rust-analyzer-src": "rust-analyzer-src"
+      },
+      "locked": {
+        "lastModified": 1668234453,
+        "narHash": "sha256-FmuZThToBvRsqCauYJ3l8HJoGLAY5cMULeYEKIaGrRw=",
+        "owner": "nix-community",
+        "repo": "fenix",
+        "rev": "8f219f6b36e8d0d56afa7f67e6e3df63ef013cdb",
+        "type": "github"
+      },
+      "original": {
+        "owner": "nix-community",
+        "repo": "fenix",
+        "type": "github"
+      }
+    },
+    "flakeCompat": {
+      "flake": false,
+      "locked": {
+        "lastModified": 1650374568,
+        "narHash": "sha256-Z+s0J8/r907g149rllvwhb4pKi8Wam5ij0st8PwAh+E=",
+        "owner": "edolstra",
+        "repo": "flake-compat",
+        "rev": "b4a34015c698c7793d592d66adbab377907a2be8",
+        "type": "github"
+      },
+      "original": {
+        "owner": "edolstra",
+        "repo": "flake-compat",
+        "type": "github"
+      }
+    },
+    "nixpkgs": {
+      "locked": {
+        "lastModified": 1692808169,
+        "narHash": "sha256-x9Opq06rIiwdwGeK2Ykj69dNc2IvUH1fY55Wm7atwrE=",
+        "owner": "NixOS",
+        "repo": "nixpkgs",
+        "rev": "9201b5ff357e781bf014d0330d18555695df7ba8",
+        "type": "github"
+      },
+      "original": {
+        "owner": "NixOS",
+        "ref": "nixpkgs-unstable",
+        "repo": "nixpkgs",
+        "type": "github"
+      }
+    },
+    "root": {
+      "inputs": {
+        "alejandra": "alejandra",
+        "nixpkgs": "nixpkgs"
+      }
+    },
+    "rust-analyzer-src": {
+      "flake": false,
+      "locked": {
+        "lastModified": 1668182250,
+        "narHash": "sha256-PYGaOCiFvnJdVz+ZCaKF8geGdffXjJUNcMwaBHv0FT4=",
+        "owner": "rust-lang",
+        "repo": "rust-analyzer",
+        "rev": "45ec315e01dc8dd1146dfeb65f0ef6e5c2efed78",
+        "type": "github"
+      },
+      "original": {
+        "owner": "rust-lang",
+        "ref": "nightly",
+        "repo": "rust-analyzer",
+        "type": "github"
+      }
+    }
+  },
+  "root": "root",
+  "version": 7
+}
diff --git a/flake.nix b/flake.nix
new file mode 100644
index 00000000..bc4c0c22
--- /dev/null
+++ b/flake.nix
@@ -0,0 +1,51 @@
+{
+  description = "";
+  inputs = {
+    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
+    alejandra = {
+      url = "github:kamadorueda/alejandra";
+      inputs.nixpkgs.follows = "nixpkgs";
+    };
+  };
+  outputs = inputs @ {
+    self,
+    nixpkgs,
+    ...
+  }:
+    with builtins; let
+      std = nixpkgs.lib;
+      systems = ["x86_64-linux"];
+      nixpkgsFor = std.genAttrs systems (system:
+        import nixpkgs {
+          localSystem = system;
+          crossSystem = system;
+          overlays = [];
+        });
+    in {
+      formatter = std.mapAttrs (system: pkgs: pkgs.default) inputs.alejandra.packages;
+      packages =
+        std.mapAttrs (system: pkgs: {
+          mylar3 = pkgs.python311Packages.buildPythonApplication {
+            name = "mylar3";
+            src = ./.;
+            format = "pyproject";
+            nativeBuildInputs = (with pkgs.python311Packages; [hatchling hatch-vcs]) ++ (with pkgs; []);
+            propagatedBuildInputs =
+              (with pkgs.python311Packages; [
+                requests
+                apscheduler
+                cherrypy
+                beautifulsoup4
+                feedparser
+                simplejson
+                cfscrape
+                pillow
+                mako
+              ])
+              ++ (with pkgs; []);
+          };
+          default = self.packages.${system}.mylar3;
+        })
+        nixpkgsFor;
+    };
+}
diff --git a/pyproject.toml b/pyproject.toml
new file mode 100644
index 00000000..cbf557f8
--- /dev/null
+++ b/pyproject.toml
@@ -0,0 +1,19 @@
+[build-system]
+requires = ["hatchling", "hatch-vcs"]
+build-backend = "hatchling.build"
+
+[project]
+name = "mylar3"
+version = "0.7.4"
+requires-python = ">=3.11"
+# dynamic = ["version"]
+# dependencies = [
+# 	"APScheduler>=3.6.3"
+# ]
+
+[project.scripts]
+mylar3 = "Mylar:main"
+
+# [tool.hatch.version]
+# source = "vcs"
+# [tool.hatch.build.targets.wheel]
